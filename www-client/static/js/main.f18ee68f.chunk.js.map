{"version":3,"sources":["_services/ipfs.service.js","static/logo-altoros.svg","_constants/alert.constants.js","_constants/config.constants.js","_constants/user.constants.js","_constants/modal.constants.js","_constants/document.constants.js","_constants/ipfs.constants.js","_constants/index.js","_helpers/formatter.js","_helpers/history.js","_helpers/user-store.js","_reducers/authentication.reducer.js","_reducers/index.js","_services/config.service.js","_reducers/alert.reducer.js","_reducers/loading.reducer.js","_reducers/document.reducer.js","_reducers/config.reducer.js","_reducers/modals.reducer.js","_helpers/store.js","_services/api.service.js","_services/auth.service.js","_helpers/timeout.js","_helpers/request.js","_helpers/uuid.js","_actions/alert.actions.js","_services/user.service.js","_services/document.service.js","_actions/config.actions.js","_actions/modal.actions.js","_actions/user.actions.js","_actions/document.actions.js","Layout/Footer.jsx","Layout/Header.jsx","_components/Modal.jsx","_components/Notification.jsx","_components/AddDocument.jsx","_components/ViewDocument.jsx","_components/DocumentsTable.jsx","Layout/Main.jsx","_pages/HomePage.jsx","_pages/LoginPage.jsx","App/routes.js","App/App.jsx","index.js"],"names":["ipfsService","addDocument","getDocument","host","window","location","hostname","ipfs","ipfsClient","protocol","upload","_callee","file","promise","_home_dmk_projects_fabric_ipfs_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","Promise","resolve","reject","reader","FileReader","fileType","documentTypes","type","undefined","readAsArrayBuffer","onload","event","target","result","abrupt","sent","stop","this","_callee2","hash","_context2","then","testBuffer","Buffer","from","add","err","_callee3","_context3","get","files","content","module","exports","__webpack_require__","p","alertConstants","SUCCESS","ERROR","CLEAR","configConstants","FAILURE","userConstants","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","modalConstants","SHOW","HIDE","SET_DATA","modalIds","viewDocument","stages","documentConstants","forEach","action","stage","key","concat","toUpperCase","image/jpg","image/jpeg","audio/mpeg","video/mpeg","application/pdf","documentTypesToMime","1","2","3","4","ipfsConstants","d","__webpack_exports__","formatter","date","moment","format","localeData","longDateFormat","history","createHashHistory","userKey","tokenKey","set","user","localStorage","setItem","JSON","stringify","token","data","getItem","parse","clear","removeItem","userStore","initialState","loggedIn","push","reqPromise","rootReducer","combineReducers","authentication","state","arguments","length","loggingIn","alert","message","loading","shadowMode","startMatches","exec","endMatches","documents","GET_REQUEST","Object","objectSpread","adding","GET_SUCCESS","items","GET_FAILURE","error","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","ADD_REQUEST","ADD_SUCCESS","ADD_FAILURE","UPDATE_REQUEST","UPDATE_SUCCESS","UPDATE_FAILURE","config","modals","modalId","rest","objectWithoutProperties","defineProperty","show","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","configService","load","isFetching","sendRequest","method","res","localConfig","update","all","loadChannels","loadChaincodes","getPeers","peers","orgConfig","org","keys","filter","k","startsWith","getIpAddress","ip_address","getChannels","getChaincodes","_extend","asyncFn","cfgKey","responseKey","response","obj","name","_getPeer","query","channel","chaincode","fcn","args","params","peer","url","URL","origin","searchParams","append","pathname","search","invoke","map","arg","requestOptions","body","login","retry","username","orgName","authService","obtainToken","fetching","regenerator_default","reload","catch","e","TIMEOUT","REFRESH_SET_TIMEOUT","ALERT_SET_TIMEOUT","AUTHORIZATION_SET_TIMEOUT","forwardRequestByError","401","timeout","fnc","bind","500","_parseMessage","input","_input$replace$split","replace","split","slicedToArray","_x","_sendRequest","apply","options","retryParams","_args","headers","updateHeaders","fetch","ok","status","retryPromise","json","statusText","Error","attempt","resolveFn","rejectFn","setTimeout","authHeader","Authorization","headerObj","Content-Type","uuidv4","c","r","Math","random","toString","alertActions","success","dispatch","userService","logout","documentService","getAll","ACTIONS","CHAINCODES","reference","CHANNELS","common","documentID","channels","chaincodes","apiService","document","value","documentType","documentDescription","documentHash","_callee4","_context4","configActions","failure","modalActions","register","object","hide","userActions","documentsActions","request","_","Footer","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","now","Date","getFullYear","react_default","createElement","className","React","Component","Header","props","toLocaleDateString","NavLink","exact","to","src","logo","alt","connected","connect","customStyles","width","height","top","left","cursor","background-color","overlay","z-index","Modal","_this","call","assertThisInitialized","handleCloseModal","setSubmitFn","_this$props","fn","handleSubmit","_this$props2","_this2","_this$props3","children","_this$props3$footer","footer","_this$props3$submitTe","submitText","modalProps","lib_default","isOpen","style","tabIndex","role","display","large","title","aria-label","onClick","aria-hidden","Children","child","cloneElement","initData","modal","Notification","cancel","Array","item","AddDocument","timestamp","updated","submitted","handleChange","changeDocumentHash","changeDocumentType","setState","_event$target","preventDefault","_this3","_this$state","onSubmit","htmlFor","ref","documentDescriptionTextArea","onChange","dist_es","onDrop","_ref","getRootProps","getInputProps","assign","ViewDocument","objUrl","getDocumentUrl","binary","Blob","fileUrl","createObjectURL","readOnly","href","DocumentsTable","refreshData","DEFAULT_COLUMNS","id","accessor","rec","filterable","Cell","row","record","original","open","index_es","fixedWidth","icon","faEye","react_table_es","columns","defaultPageSize","defaultFilterMethod","String","indexOf","defaultSorted","desc","Main","route","component","Notification_connected","HomePage","prevProps","Modal_connected","AddDocument_connected","ViewDocument_connected","DocumentsTable_connected","LoginPage","_this$setState","_e$target","_this2$state","publicRoutes","path","privateRoutes","App","listen","HashRouter","Switch","Route","render","react_spinners","Main_connected","Footer_Footer","connectedApp","ReactDOM","es","getElementById"],"mappings":"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","file":"static/js/main.f18ee68f.chunk.js","sourcesContent":["// @flow\nimport ipfsClient from 'ipfs-http-client';\nimport {documentTypes} from '../_constants';\n\nexport const ipfsService = {\n  addDocument,\n  getDocument\n};\n\nconst host = window.location.hostname;\nconst ipfs = ipfsClient(host, '5001', {protocol: 'http'});\n\nasync function upload(file): Promise<any> {\n\n  let promise = new Promise((resolve, reject) => {\n    let reader = new FileReader();\n    const fileType = documentTypes[file.type];\n    if (fileType === undefined) {\n      resolve(undefined);\n    } else {\n      reader.readAsArrayBuffer(file);\n      reader.onload = (event) => {\n        resolve({\n          file: event.target.result,\n          type: fileType\n        });\n      };\n    }\n  });\n  return await promise;\n}\n\nasync function addDocument(file: File): Promise<string | any> {\n\n  let hash = new Promise((resolve, reject) => {\n    upload(file).then((result) => {\n      if (result === undefined) {\n        resolve(undefined);\n      } else {\n        let testBuffer = Buffer.from(result.file);\n        const fileType = result.type;\n        ipfs.add(testBuffer, (err, result) => {\n          if (err) {\n            reject(err);\n          }\n          resolve({\n            hash: result[0].hash,\n            type: fileType\n          });\n        });\n      }\n    });\n  });\n\n  return await hash;\n}\n\nasync function getDocument(hash: string): ArrayBuffer | any {\n  let promise = new Promise((resolve, reject) => {\n    ipfs.get(hash, (err, files) => {\n      if (err) {\n        reject(err);\n      }\n      resolve(files[0].content);\n    });\n  });\n\n  return await promise;\n}\n","module.exports = __webpack_public_path__ + \"static/media/logo-altoros.b1a90325.svg\";","export const alertConstants = {\n  SUCCESS: 'ALERT_SUCCESS',\n  ERROR: 'ALERT_ERROR',\n  CLEAR: 'ALERT_CLEAR'\n};\n","export const configConstants = {\n  SUCCESS: 'CONFIG_SUCCESS',\n  FAILURE: 'CONFIG_FAILURE'\n};","export const userConstants = {\n  LOGIN_REQUEST: 'USERS_LOGIN_REQUEST',\n  LOGIN_SUCCESS: 'USERS_LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'USERS_LOGIN_FAILURE',\n\n  LOGOUT: 'USERS_LOGOUT'\n};\n","export const modalConstants = {\n  SHOW: 'MODAL_SHOW',\n  HIDE: 'MODAL_HIDE',\n  SET_DATA: 'MODAL_SET_DATA'\n};\n\nexport const modalIds = {\n  addDocument: 'addDocument',\n  viewDocument: 'viewDocument'\n};\n","const stages = ['request', 'success', 'failure'];\nconst actions = ['get', 'getall', 'add', 'update'];\n\nexport const documentConstants = {};\nactions.forEach(action => {\n  stages.forEach(stage => {\n    const key = `${action.toUpperCase()}_${stage.toUpperCase()}`;\n    documentConstants[key] = 'DOCUMENT_' + key;\n  });\n});\n\nexport const documentTypes = {'image/jpg': 1, 'image/jpeg': 1, 'audio/mpeg': 2, 'video/mpeg': 3, 'application/pdf': 4};\n\nexport const documentTypesToMime = {1: 'image/jpeg', 2: 'audio/mpeg', 3: 'video/mpeg', 4: 'application/pdf'};\n","const stages = ['request', 'success', 'failure'];\nconst actions = ['add', 'get'];\n\nexport const ipfsConstants = {};\nactions.forEach(action => {\n  stages.forEach(stage => {\n    const key = `${action.toUpperCase()}_${stage.toUpperCase()}`;\n    ipfsConstants[key] = 'IPFS_' + key;\n  });\n});\n","export * from './alert.constants';\nexport * from './config.constants';\nexport * from './user.constants';\nexport * from './modal.constants';\nexport * from './document.constants';\nexport * from './ipfs.constants';\n","// @flow\n\nimport moment from 'moment';\n\nexport const formatter = {\n  number: (val: string | number) => Number(val).toLocaleString(),\n  date: (date: Date) => date.toLocaleDateString(),\n  time: (date: Date) => date.toLocaleTimeString(),\n  fullName: (firstName: string, lastName: string) => firstName + ' ' + lastName,\n  org: (orgKey: string) => orgKey || '###',\n  datetime: (date: Date) => moment(date).format(moment.localeData().longDateFormat('l') + ' ' + moment.localeData().longDateFormat('LT')),\n  dateTimeLong: (date: Date) => moment(date).format(moment.localeData().longDateFormat('l') + ' ' + moment.localeData().longDateFormat('LTS'))\n};\n","import {createHashHistory} from 'history';\n\nexport const history = createHashHistory();","// @flow\nimport type {User} from '../_types';\n\nconst userKey = 'user';\nconst tokenKey = 'token';\n\nexport function set(user: User): void {\n  localStorage.setItem(userKey, JSON.stringify(user));\n  localStorage.setItem(tokenKey, user.token);\n}\n\nexport function get(): ?User {\n  const data = localStorage.getItem(userKey);\n  if (data) {\n    return JSON.parse(data);\n  }\n  return null;\n}\n\nexport function clear(): void {\n  localStorage.removeItem(userKey);\n  localStorage.removeItem(tokenKey);\n}\n\nexport function getToken(): ?string {\n  return localStorage.getItem(tokenKey);\n}","// @flow\nimport {userConstants} from '../_constants';\nimport {history} from '../_helpers';\nimport * as userStore from '../_helpers/user-store';\nimport type {UserAction, State} from '../_types';\n\nlet user = userStore.get();\nconst initialState = user ? {loggedIn: true, user} : {};\nif (!user) {\n  history.push('./login');\n}\n\nexport function authentication(state: State = initialState, action: UserAction) {\n  switch (action.type) {\n    case userConstants.LOGIN_REQUEST:\n      return {\n        loggingIn: true,\n        user: action.user\n      };\n    case userConstants.LOGIN_SUCCESS:\n      return {\n        loggedIn: true,\n        user: action.user\n      };\n    case userConstants.LOGIN_FAILURE:\n      return {};\n    case userConstants.LOGOUT:\n      return {};\n    default:\n      return state;\n  }\n}\n","import {combineReducers} from 'redux';\n\nimport {authentication} from './authentication.reducer';\nimport {alert} from './alert.reducer';\nimport {config} from './config.reducer';\nimport {loading} from './loading.reducer';\nimport {documents} from './document.reducer';\nimport {modals} from './modals.reducer';\n\nconst rootReducer = combineReducers({\n  authentication,\n  alert,\n  loading,\n  documents,\n  config,\n  modals\n});\n\nexport default rootReducer;\n","// @flow\nimport {config, getChannels, getChaincodes} from './api.service';\nimport type {Config} from '../_types';\n\nexport const configService = {\n  load,\n  get,\n  update,\n  getPeers,\n  getIpAddress,\n  getChannels: loadChannels,\n  getChaincodes: loadChaincodes\n};\n\nlet localConfig: Config = {\n  org: ''\n};\nlet isFetching: boolean = false;\nlet reqPromise: Promise<Config>;\n\nfunction get(): Config {\n  return localConfig;\n}\n\nfunction load(): Promise<Config> {\n  if (isFetching) {\n    return reqPromise;\n  }\n  isFetching = true;\n\n  reqPromise = config()\n    .then(res => {\n      localConfig = res;\n      return localConfig;\n    });\n\n  return reqPromise;\n}\n\n// load secured information, like chaincodes, channels\nfunction update(): Promise<any> {\n  return Promise.all([\n    loadChannels(),\n    loadChaincodes()\n  ]);\n}\n\nfunction _extend(asyncFn: Function, cfgKey: string, responseKey): Promise<Object> {\n  if (!localConfig[cfgKey]) {\n    if (asyncFn.promise) {\n      return asyncFn.promise;\n    }\n    asyncFn.promise = asyncFn()\n      .then(response => {\n        localConfig[cfgKey] = {};\n        response[responseKey].forEach(obj => {\n          localConfig[cfgKey][obj.name] = obj.name;\n        });\n\n        delete asyncFn.promise;\n        return localConfig[cfgKey];\n      });\n\n    return asyncFn.promise;\n  }\n\n  return Promise.resolve(localConfig[cfgKey]);\n}\n\nfunction loadChannels(): Promise<Object> {\n  return _extend(getChannels, 'channels', 'channels');\n}\n\nfunction loadChaincodes(): Promise<Object> {\n  return _extend(getChaincodes, 'chaincodes', 'chaincodes');\n}\n\nfunction getPeers(): string[] {\n  if (localConfig.peers) {\n    return localConfig.peers;\n  }\n  // $FlowFixMe\n  const orgConfig = localConfig['network-config'][localConfig.org];\n  localConfig.peers = Object.keys(orgConfig).filter(k => k.startsWith('peer'));\n  return localConfig.peers;\n}\n\nfunction getIpAddress(): string {\n  if (localConfig.ip_address) {\n    return localConfig.ip_address;\n  }\n  // $FlowFixMe\n  const orgConfig = localConfig['network-config'][localConfig.org];\n  localConfig.ip_address = orgConfig.ip_address;\n  return localConfig.ip_address;\n}\n","// @flow\nimport {alertConstants} from '../_constants';\nimport type {Action, State} from '../_types';\n\nexport function alert(state: State = {}, action: Action): State {\n\n  switch (action.type) {\n    case alertConstants.SUCCESS:\n      return {\n        type: 'alert-success',\n        message: action.message\n      };\n    case alertConstants.ERROR:\n      return {\n        type: 'alert-danger',\n        message: action.message\n      };\n    case alertConstants.CLEAR:\n      return {};\n    default:\n      return state;\n  }\n}","export function loading(state = false, action) {\n  const { type, shadowMode } = action;\n\n  if (shadowMode) {\n    return false;\n  }\n  const startMatches = /(.*)_(REQUEST)/.exec(type);\n  const endMatches = /(.*)_(SUCCESS|FAILURE)/.exec(type);\n\n  if (!startMatches && !endMatches) return state;\n\n  return !!startMatches || !endMatches;\n}\n","import {documentConstants} from '../_constants';\n\nexport function documents(state = {}, action) {\n  switch (action.type) {\n    case documentConstants.GET_REQUEST:\n      return {...state, ...{\n        loading: true,\n        adding: undefined\n      }};\n    case documentConstants.GET_SUCCESS:{\n      return {...state, ...{\n        items: action.documents.result,\n        loading: false\n      }};}\n    case documentConstants.GET_FAILURE:\n      return {...state, ...{\n        items: {},\n        error: action.error,\n        loading: false\n      }};\n    case documentConstants.GETALL_REQUEST:\n      return {...state, ...{\n        loading: true,\n        adding: undefined\n      }};\n    case documentConstants.GETALL_SUCCESS:{\n      return {...state, ...{\n        items: action.documents.result,\n        loading: false\n      }};}\n    case documentConstants.GETALL_FAILURE:\n      return {...state, ...{\n        items: {},\n        error: action.error,\n        loading: false\n      }};\n    case documentConstants.ADD_REQUEST:\n      return {...state, ...{\n        adding: true\n      }};\n    case documentConstants.ADD_SUCCESS:\n      return {...state, ...{\n        adding: false\n      }};\n    case documentConstants.ADD_FAILURE:\n      return {...state, ...{\n        error: action.error\n      }};\n    case documentConstants.UPDATE_REQUEST:\n      return {...state, ...{\n        adding: true\n      }};\n    case documentConstants.UPDATE_SUCCESS:\n      return {...state, ...{\n        adding: false\n      }};\n    case documentConstants.UPDATE_FAILURE:\n      return {...state, ...{\n        error: action.error\n      }};\n\n    default:\n      return state;\n  }\n}\n","import {configConstants} from '../_constants';\nimport type {ConfigAction, State} from '../_types';\n\nexport function config(state: State = null, action: ConfigAction): State {\n  switch (action.type) {\n    case configConstants.SUCCESS:\n      return action.config;\n    default:\n      return state;\n  }\n}","import {modalConstants} from '../_constants';\n\nexport function modals(state = {}, action) {\n  const {modalId, type, ...rest} = action;\n  switch (type) {\n    case modalConstants.SHOW:\n    case modalConstants.HIDE: {\n      return {\n        ...state,\n        ...{\n          [modalId]: {\n            ...state[modalId],\n            ...rest,\n            show: type === modalConstants.SHOW\n          }\n        }\n      }\n    }\n    case modalConstants.SET_DATA: {\n      return {\n        ...state,\n        ...{\n          [modalId]: {\n            ...state[modalId],\n            ...rest\n          }\n        }\n      }\n    }\n    default: return state;\n  }\n}","import {createStore, applyMiddleware} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport {createLogger} from 'redux-logger';\nimport rootReducer from '../_reducers';\n\nconst loggerMiddleware = createLogger();\n\nexport const store = createStore(\n  rootReducer,\n  applyMiddleware(\n    thunkMiddleware,\n    loggerMiddleware\n  )\n);","// @flow\nimport {sendRequest} from '../_helpers/request';\nimport {configService} from './config.service';\n\ntype LoginResponse = {\n  token: string\n}\n\nfunction _getPeer(): string {\n  return configService.getPeers()[0];\n}\n\nexport function query(channel: string, chaincode: string, fcn: string, args: any[] = []): * {\n  const requestOptions = {\n    method: 'GET'\n  };\n  const {org} = configService.get();\n  const params = {\n    peer: `${org}/${_getPeer()}`,\n    fcn,\n    args: JSON.stringify(args)\n  };\n\n  const url = new URL(`${window.location.origin}/channels/${channel}/chaincodes/${chaincode}`);\n  Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n\n  return sendRequest(`${url.pathname}${url.search}`, requestOptions);\n}\n\nexport function invoke(channel: string, chaincode: string, fcn: string, args: any[] = []): * {\n  const {org} = configService.get();\n  args = args.map(arg => arg + '');\n  const requestOptions = {\n    method: 'POST',\n    body: JSON.stringify({\n      peers: [`${org}/${_getPeer()}`],\n      fcn,\n      args\n    })\n  };\n\n  return sendRequest(`/channels/${channel}/chaincodes/${chaincode}`, requestOptions);\n}\n\nexport function login(user: Object, retry?: boolean = true): Promise<LoginResponse> {\n  const requestOptions = {\n    method: 'POST',\n    body: JSON.stringify({username: user.name, orgName: user.org})\n  };\n\n  return sendRequest(`/users`, requestOptions, retry);\n}\n\nexport function getChannels(): * {\n  return sendRequest(`/channels?peer=${_getPeer()}`);\n}\n\nexport function getChaincodes(): * {\n  return sendRequest(`/chaincodes?peer=${_getPeer()}`);\n}\n\nexport function extendConfig(): * {\n  return configService.update();\n}\n\nexport function config(): * {\n  const requestOptions = {\n    method: 'GET'\n  };\n\n  return sendRequest(`/config`, requestOptions);\n}\n","// @flow\nimport {set, get, clear} from '../_helpers';\nimport {login, extendConfig} from './api.service';\nimport type {User} from '../_types';\n\nexport const authService = {\n  obtainToken\n};\nlet fetching = false;\nlet promise;\nasync function obtainToken(): Promise<User | any> {\n  const user = get();\n  if (!user) {\n    fetching = false;\n    clear();\n    window.location.reload(true);\n    return Promise.resolve();\n  }\n  if (fetching) {\n    return promise;\n  }\n  fetching = true;\n  promise = login(user, false)\n    .then(res => {\n      fetching = false;\n      if (res.token) {\n        user.token = res.token;\n        set(user);\n      }\n\n      return extendConfig()\n        .then(() => {\n          return user;\n        });\n    })\n    .catch(e => {\n      fetching = false;\n      return Promise.reject(e);\n    });\n\n  return promise;\n}\n","// @flow\n\nexport const TIMEOUT = {\n  REFRESH_SET_TIMEOUT: 3500,\n  ALERT_SET_TIMEOUT: 3000,\n  AUTHORIZATION_SET_TIMEOUT: 1000\n};\n","// @flow\nimport {authService} from '../_services/auth.service';\nimport {getToken} from './user-store';\nimport {TIMEOUT} from './timeout';\n\nconst forwardRequestByError = {\n  '401': {\n    retry: 3,\n    timeout: TIMEOUT.AUTHORIZATION_SET_TIMEOUT,\n    fnc: authService.obtainToken.bind(authService)\n  },\n  '500': {\n    retry: 0,\n    timeout: TIMEOUT.REFRESH_SET_TIMEOUT,\n    fnc: Promise.resolve.bind(Promise)\n  }\n};\n\nfunction _parseMessage(input: string = ''): string {\n  const [, detailedMsg] = input.replace(')', '').split('message: ');\n  return detailedMsg || input;\n}\n\nexport async function sendRequest(url: string, options: Object = {}, retry: boolean = true): Promise<any> {\n  options.headers = updateHeaders(options.headers);\n\n  const response = await fetch(url, options);\n  if (!response.ok) {\n    const retryParams = forwardRequestByError[response.status];\n    if (retryParams && retry) {\n      await retryParams.fnc();\n      return await retryPromise(url, options, retryParams.timeout, retryParams.retry);\n    } else {\n      const data = await response.json();\n      const error = (data && data.message && _parseMessage(data.message)) || response.statusText;\n      return Promise.reject(new Error(error));\n    }\n  }\n\n  return await response.json();\n}\n\nfunction retry(asyncFn: Function, args: any[], timeout: number, attempt: number, resolveFn: Function, rejectFn: Function, e?: Error) {\n  if (attempt < 0) {\n    return rejectFn(e);\n  }\n  return asyncFn.apply(this, args)\n    .then(resolveFn)\n    .catch(e => {\n      attempt--;\n      setTimeout(() => {\n        retry(asyncFn, args, timeout, attempt, resolveFn, rejectFn, e);\n      }, timeout);\n    });\n}\n\nconst retryPromise = (url: string, options: Object, timeout: number, attempt: number) => {\n  return new Promise((resolve, reject) => {\n    retry(sendRequest, [url, options, false], timeout, attempt, resolve, reject)\n  });\n};\n\nfunction authHeader() {\n  let token = getToken();\n\n  if (token) {\n    return {'Authorization': 'Bearer ' + token};\n  } else {\n    return {};\n  }\n}\n\nfunction updateHeaders(headerObj = {}) {\n  return {...headerObj, ...authHeader(), ...{'Content-Type': 'application/json'}}\n}\n","// @flow\n\nexport const uuidv4 = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n};\n","// @flow\nimport {alertConstants} from '../_constants';\nimport type {Action, ThunkAction, Dispatch} from '../_types/Redux';\nimport {TIMEOUT} from '../_helpers';\n\nexport const alertActions = {\n  success,\n  error,\n  clear\n};\n\nfunction success(message: string | Array<string>): ThunkAction {\n  return (dispatch: Dispatch) => {\n    setTimeout(() => {dispatch(clear())}, TIMEOUT.ALERT_SET_TIMEOUT);\n    return dispatch({type: alertConstants.SUCCESS, message});\n  };\n}\n\nfunction error(message: string): ThunkAction {\n  return (dispatch: Dispatch) => {\n    setTimeout(() => {dispatch(clear())}, TIMEOUT.ALERT_SET_TIMEOUT);\n    return dispatch({type: alertConstants.ERROR, message});\n  };\n}\n\nfunction clear(): Action {\n  return {type: alertConstants.CLEAR};\n}\n","// @flow\nimport {authService} from './auth.service';\nimport {set, clear} from '../_helpers';\n\nexport const userService = {\n  login,\n  logout\n};\n\nfunction login(username: string, orgName: string): * {\n  set({name: username, org: orgName});\n  return authService.obtainToken();\n}\n\nfunction logout() {\n  clear();\n}\n","// @flow\nimport * as apiService from './api.service';\nimport {configService} from './config.service';\nimport type {Document, ListResponse} from '../_types';\n\nexport const documentService = {\n  get,\n  getAll,\n  add,\n  update\n};\n\nconst ACTIONS = {\n  get: 'getDocument',\n  getAll: 'getDocuments',\n  add: 'createDocument',\n  update: 'updateDocument'\n};\n\nconst CHAINCODES = {\n  reference: 'reference'\n};\n\nconst CHANNELS = {\n  common: 'common'\n};\n\nasync function get(documentID: string): Promise<ListResponse<Document>> {\n  const channels = await configService.getChannels();\n  const chaincodes = await configService.getChaincodes();\n\n  return await apiService.query(\n    channels[CHANNELS.common],\n    chaincodes[CHAINCODES.reference],\n    ACTIONS.get,\n    [\n      documentID,\n    ]);\n}\n\nasync function getAll(): Promise<ListResponse<Document>> {\n  const channels = await configService.getChannels();\n  const chaincodes = await configService.getChaincodes();\n\n  return await apiService.query(\n    channels[CHANNELS.common],\n    chaincodes[CHAINCODES.reference],\n    ACTIONS.getAll,\n    []);\n}\n\nasync function add(document: Document): Promise<any> {\n  const channels = await configService.getChannels();\n  const chaincodes = await configService.getChaincodes();\n\n  return await apiService.invoke(\n    channels[CHANNELS.common],\n    chaincodes[CHAINCODES.reference],\n    ACTIONS.add,\n    [\n      document.key.documentID,\n      document.value.documentType,\n      document.value.documentDescription,\n      document.value.documentHash,\n    ]);\n}\n\nasync function update(document: Document): Promise<any> {\n  const channels = await configService.getChannels();\n  const chaincodes = await configService.getChaincodes();\n\n  return await apiService.invoke(\n    channels[CHANNELS.common],\n    chaincodes[CHAINCODES.reference],\n    ACTIONS.update,\n    [\n      document.key.documentID,\n      document.value.documentType,\n      document.value.documentDescription,\n      document.value.documentHash,\n    ]);\n}\n","// @flow\nimport {configConstants} from '../_constants';\nimport {configService} from '../_services';\nimport type {Action, ThunkAction, Dispatch, ErrorAction} from '../_types/Redux';\n\nexport const configActions = {\n  get\n};\n\ntype SuccessAction = Action & {config: {}};\n\nfunction get(): ThunkAction {\n  return (dispatch: Dispatch) => {\n    configService.load()\n      .then(\n         config => {\n          dispatch(success(config));\n        },\n        error => {\n          dispatch(failure(error.toString()));\n        }\n      );\n  };\n\n  function success(config): SuccessAction {\n    return {type: configConstants.SUCCESS, config}\n  }\n  function failure(error): ErrorAction {\n    return {type: configConstants.FAILURE, error}\n  }\n}","// @flow\nimport {modalConstants} from '../_constants'\nimport type {Action} from '../_types';\n\nexport const modalActions = {\n  register,\n  show,\n  hide\n};\n\ntype ModalAction = Action & {modalId: string};\n\nfunction register(modalId: string): ModalAction {\n  return {type: modalConstants.HIDE, modalId};\n}\n\nfunction show(modalId: string, object: {}): ModalAction {\n  return {type: modalConstants.SHOW, modalId, object};\n}\n\nfunction hide(modalId: string): ModalAction {\n  return {type: modalConstants.HIDE, modalId};\n}","\nimport {userConstants} from '../_constants';\nimport {userService} from '../_services';\nimport {alertActions} from './';\nimport {history} from '../_helpers';\nimport type {Action, ThunkAction, Dispatch, ErrorAction, UserAction} from '../_types';\n\nexport const userActions = {\n  login,\n  logout\n};\n\nfunction login(username: string, orgName: string): ThunkAction {\n  return (dispatch: Dispatch) => {\n    dispatch(request({username}));\n\n    userService.login(username, orgName)\n      .then(\n        user => {\n          dispatch(success(user));\n          history.push('./');\n        },\n        error => {\n          dispatch(failure(error.toString()));\n          dispatch(alertActions.error(error.toString()));\n        }\n      );\n  };\n\n  function request(user): UserAction {\n    return {type: userConstants.LOGIN_REQUEST, user}\n  }\n\n  function success(user): UserAction {\n    return {type: userConstants.LOGIN_SUCCESS, user}\n  }\n\n  function failure(error): ErrorAction {\n    return {type: userConstants.LOGIN_FAILURE, error}\n  }\n}\n\nfunction logout(): ThunkAction {\n  return (dispatch: Dispatch) => {\n    userService.logout();\n    dispatch(success());\n  };\n\n  function success(): Action {\n    return {type: userConstants.LOGOUT};\n  }\n}\n","// @flow\nimport {documentConstants} from '../_constants';\nimport {documentService} from '../_services';\nimport {alertActions} from './';\nimport type {Action, ThunkAction, Dispatch, ErrorAction, Document} from '../_types';\nimport type {ListResponse} from '../_types/Response';\n\n\nexport const documentsActions = {\n  get,\n  getAll,\n  add,\n  update\n};\n\ntype DocumentsAction = Action & { documents: ListResponse<Document> };\n\nfunction get(documentID: string): ThunkAction {\n  return (dispatch: Dispatch) => {\n    dispatch(request(documentID));\n\n    documentService.get(documentID)\n      .then(\n        documents => {\n          dispatch(success(documents));\n        },\n        error => {\n          dispatch(failure(error.toString()));\n          dispatch(alertActions.error(error.toString()));\n        }\n      );\n  };\n\n  function request(documentID: string): Action {\n    return {type: documentConstants.GET_REQUEST, documentID}\n  }\n\n  function success(documents: ListResponse<Document>): DocumentsAction {\n    return {type: documentConstants.GET_SUCCESS, documents}\n  }\n\n  function failure(error: string): ErrorAction {\n    return {type: documentConstants.GET_FAILURE, error}\n  }\n}\n\nfunction getAll(shadowMode: boolean = false): ThunkAction {\n  return (dispatch: Dispatch) => {\n    dispatch(request(shadowMode));\n\n    documentService.getAll()\n      .then(\n        documents => {\n          dispatch(success(documents));\n        },\n        error => {\n          dispatch(failure(error.toString()));\n          dispatch(alertActions.error(error.toString()));\n        }\n      );\n  };\n\n  function request(shadowMode: boolean): Action {\n    return {type: documentConstants.GETALL_REQUEST, shadowMode}\n  }\n\n  function success(documents: ListResponse<Document>): DocumentsAction {\n    return {type: documentConstants.GETALL_SUCCESS, documents}\n  }\n\n  function failure(error: string): ErrorAction {\n    return {type: documentConstants.GETALL_FAILURE, error}\n  }\n}\n\nfunction add(document: Document): ThunkAction {\n  return (dispatch: Dispatch) => {\n    dispatch(request());\n    documentService.add(document)\n      .then(\n        _ => {\n          dispatch(success());\n          dispatch(alertActions.success('Document was added'));\n        },\n        error => {\n          dispatch(failure(error.toString()));\n          dispatch(alertActions.error(error.toString()));\n        }\n      );\n  };\n\n  function request(): Action {\n    return {type: documentConstants.ADD_REQUEST}\n  }\n\n  function success(): Action {\n    return {type: documentConstants.ADD_SUCCESS}\n  }\n\n  function failure(error): ErrorAction {\n    return {type: documentConstants.ADD_FAILURE, error}\n  }\n}\n\nfunction update(document: Document): ThunkAction {\n  return (dispatch: Dispatch) => {\n    dispatch(request());\n    documentService.update(document)\n      .then(\n        _ => {\n          dispatch(success());\n          dispatch(alertActions.success('Document was updated'));\n        },\n        error => {\n          dispatch(failure(error.toString()));\n          dispatch(alertActions.error(error.toString()));\n        }\n      );\n  };\n\n  function request(): Action {\n    return {type: documentConstants.UPDATE_REQUEST}\n  }\n\n  function success(): Action {\n    return {type: documentConstants.UPDATE_SUCCESS}\n  }\n\n  function failure(error): ErrorAction {\n    return {type: documentConstants.UPDATE_FAILURE, error}\n  }\n}\n","import React from 'react';\n\nexport class Footer extends React.Component {\n  render() {\n    const now = new Date().getFullYear();\n    return (\n      <footer className=\"row-custom footer\">\n        <div className=\"container\">\n          <p className=\"text-white text-center\">\n            &copy; {now} Altoros. All rights reserved\n          </p>\n        </div>\n      </footer>\n    );\n  }\n}\n","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport logo from '../static/logo-altoros.svg';\n\nclass Header extends React.Component {\n  render() {\n    const {user} = this.props;\n    const date = new Date().toLocaleDateString();\n    return (\n      <nav className=\"row-custom header navbar navbar-light navbar-expand\">\n        <div className=\"navbar-brand\">\n          <NavLink exact to='/' className=\"nav-link\">\n            <img src={logo} alt=\"logo\" className={`logo`}/>\n          </NavLink>\n        </div>\n        {user && <div className=\"container-fluid\">\n          <div className='ml-5 text-white'>Hi, <b>{user.name}</b></div>\n          <div className='nav navbar-nav text-white'>\n            {date}\n          </div>\n          <ul className=\"nav navbar-nav pull-xs-right\">\n            <li className=\"nav-item\">\n              <NavLink to='/login' className=\"nav-link text-white\">\n                Logout\n              </NavLink>\n            </li>\n          </ul>\n        </div>}\n      </nav>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const {authentication} = state;\n  const {user} = authentication;\n  return {\n    user\n  };\n}\n\nconst connected = connect(mapStateToProps)(Header);\nexport {connected as Header};\n","// @flow\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport ReactModal from 'react-modal';\nimport {modalActions} from '../_actions/modal.actions';\n\nconst customStyles = {\n  content: {\n    width: '100%',\n    height: '100%',\n    top: '0',\n    left: '0',\n    cursor: 'default',\n    'background-color': 'rgba(255, 255, 255, 0.1)'\n  },\n  overlay: {\n    'z-index': '20'\n  }\n};\n\ntype Props = {\n  dispatch: Function,\n  modalId: string,\n  title: string,\n  large: boolean,\n  modals: {}, //TODO\n  children: any[],\n  footer: boolean,\n  submitText: string\n};\ntype State = {\n};\n\nclass Modal extends React.Component<Props, State> {\n  handleSubmit: (e: SyntheticEvent<HTMLButtonElement>) => {};\n  constructor(props) {\n    super(props);\n    (this:any).handleCloseModal = this.handleCloseModal.bind(this);\n    (this:any).setSubmitFn = this.setSubmitFn.bind(this);\n  }\n\n  componentDidMount() {\n    const {modalId, dispatch} = this.props;\n    dispatch(modalActions.register(modalId));\n  }\n\n  static open(dispatch: Function, modalId: string, data: any) {\n    dispatch(modalActions.show(modalId, data));\n  }\n\n  setSubmitFn(fn: Function) {\n    this.handleSubmit = fn;\n  }\n\n  handleCloseModal () {\n    const {modalId, dispatch} = this.props;\n    dispatch(modalActions.hide(modalId));\n  }\n\n  render() {\n    const {modalId, modals, children, footer = true, submitText = 'Save'} = this.props;\n    const modalProps = modals[modalId];\n    if (!(modalProps && modalProps.show)) {\n      return null;\n    }\n    modalProps.modalId = modalId;\n    return (\n      <ReactModal\n        isOpen={modalProps.show}\n        style={customStyles}\n      >\n        <div className=\"modal\" tabIndex=\"-1\" role=\"dialog\" style={{display: 'block'}}>\n          <div className={(this.props.large ? 'modal-lg' : '') + ' modal-dialog'} role=\"document\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\">{this.props.title}</h5>\n                <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={this.handleCloseModal}>\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                <div className=\"col\">\n                  {React.Children.map(children,\n                    child => {\n                      return React.cloneElement(child,\n                        {\n                          setSubmitFn: this.setSubmitFn,\n                          data: modalProps.data,\n                          initData: modalProps.object,\n                          modal: modalProps,\n                          ...this.props\n                        });\n                    })}\n                </div>\n              </div>\n              {footer && <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-primary\"\n                        onClick={(e)=>{this.handleSubmit(e)}}>{submitText}</button>\n                <button type=\"button\" className=\"btn btn-secondary\"\n                        onClick={this.handleCloseModal}>Close</button>\n              </div>}\n            </div>\n          </div>\n        </div>\n\n      </ReactModal>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const {modals} = state;\n  return {\n    modals\n  };\n}\n\nconst connected = connect(mapStateToProps)(Modal);\nexport {connected as Modal};\n","// @flow\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport './Notification.css';\nimport {alertActions} from '../_actions';\n\ntype Alert = {\n  type: string,\n  message: any\n}\ntype Props = {\n  dispatch: Function,\n  alert: Alert,\n  user: any\n};\ntype State = {};\n\nclass Notification extends React.Component<Props, State> {\n\n  constructor(props) {\n    super(props);\n\n    (this: any).cancel = this.cancel.bind(this);\n  }\n\n  render() {\n    const {alert} = this.props;\n    return (\n      <div>\n        <div className={'notification ' + ((alert.message) ? 'fadein' : 'fadeout invisible')}>\n          {(alert.message) &&\n          <div className={`d-flex justify-content-between align-items-between  alert ${alert.type || ''}`}>\n            <div className={`m-1 align-items-center message-block`}>\n              {alert.message instanceof Array ? (\n                alert.message.map((item) =>\n                  <div className={`m-1 border`}>\n                    <span className={`w-100 message-text`}>{item}</span>\n                  </div>)\n              ) : (\n                <div className={`m-1`}>\n                  <span className={`w-100 message-text`}>{alert.message}</span>\n                </div>\n              )}\n\n            </div>\n            <div className={`m-1 d-flex align-items-center`}>\n              <span aria-hidden=\"true\" onClick={this.cancel} className=\"close-btn\">&times;</span>\n            </div>\n          </div>}\n        </div>\n      </div>\n    );\n  }\n\n  cancel() {\n    this.props.dispatch(alertActions.clear());\n  }\n}\n\nfunction mapStateToProps(state) {\n  const {alert, authentication} = state;\n  const {user} = authentication;\n  return {\n    alert,\n    user\n  };\n}\n\nconst connected = connect(mapStateToProps)(Notification);\nexport {connected as Notification};\n","// @flow\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport type {Document} from '../_types';\nimport {alertActions, documentsActions} from '../_actions';\nimport Dropzone from 'react-dropzone'\nimport {ipfsService} from '../_services';\nimport {uuidv4} from '../_helpers';\n\ntype Props = {\n  initData: Document | any,\n  dispatch: Function,\n  setSubmitFn: Function\n};\ntype State = {\n  submitted: boolean,\n  document: Document\n};\n\nclass AddDocument extends React.Component<Props, State> {\n  documentDescriptionTextArea: ?HTMLTextAreaElement;\n\n  constructor(props) {\n    super(props);\n\n    const document = this.props.initData || {\n      key: {\n        documentID: uuidv4()\n      },\n      value: {\n        documentDescription: '',\n        documentHash: '',\n        documentType: 0,\n        timestamp: 0,\n        updated: 0\n      }\n    };\n\n    this.state = {\n      document: document,\n      submitted: false\n    };\n\n    (this: any).handleChange = this.handleChange.bind(this);\n    (this: any).handleSubmit = this.handleSubmit.bind(this);\n    (this: any).changeDocumentHash = this.changeDocumentHash.bind(this);\n    (this: any).changeDocumentType = this.changeDocumentType.bind(this);\n\n    //Modal integration\n    this.props.setSubmitFn && this.props.setSubmitFn(this.handleSubmit);\n  }\n\n  onDrop(files) {\n    ipfsService.addDocument(files[0]).then(\n      document => {\n        if (!document) {\n          this.props.dispatch(alertActions.error('Document type is not supported'));\n        } else {\n          this.changeDocumentHash(document.hash);\n          this.changeDocumentType(document.type);\n          this.props.dispatch(alertActions.success('Document file was uploaded'));\n        }\n      },\n      error => {\n        this.props.dispatch(alertActions.error(`Error: ${error.toString()}`));\n      }\n    );\n  }\n\n  changeDocumentHash(hash: any) {\n    const {document} = this.state;\n\n    this.setState({\n      document: {\n        ...document,\n        value: {\n          ...document.value,\n          documentHash: hash\n        }\n      }\n    });\n  }\n\n  changeDocumentType(type: any) {\n    const {document} = this.state;\n\n    this.setState({\n      document: {\n        ...document,\n        value: {\n          ...document.value,\n          documentType: type\n        }\n      }\n    });\n  }\n\n  handleChange(event: SyntheticInputEvent<>) {\n    const {name, value} = event.target;\n    const {document} = this.state;\n    this.setState({\n      document: {\n        ...document,\n        value: {\n          ...document.value,\n          [name]: value\n        }\n      },\n      submitted: false\n    });\n  }\n\n  handleSubmit(event: SyntheticEvent<>) {\n    event.preventDefault();\n\n    this.setState({submitted: true});\n    const {document} = this.state;\n\n    if (document.value.documentHash) {\n      this.props.dispatch(documentsActions.add(document));\n    }\n  }\n\n\n  render() {\n    const {document, submitted} = this.state;\n    return (\n      <form name=\"form\" onSubmit={this.handleSubmit}>\n        <div className='form-group'>\n          <label htmlFor=\"documentDescription\">Description</label>\n\n          <div className='input-group'>\n            <textarea className={\"form-control\"}\n                      name=\"documentDescription\" value={document.value.documentDescription}\n                      ref={(input) => {\n                        this.documentDescriptionTextArea = input;\n                      }}\n                      onChange={this.handleChange}/>\n          </div>\n        </div>\n        <Dropzone\n          onDrop={this.onDrop.bind(this)}\n        >\n          {({getRootProps, getInputProps}) => (\n            <div>\n              <div {...getRootProps()}\n                   className={'text-center drop-zone-section w-75' + (submitted && !document.value.documentHash ? ' border-danger' : '')}>\n                <input {...getInputProps()} />\n                <div className={`d-table w-100 h-100`}>\n                  <p className={`d-table-cell align-middle bg-light`}>Drop file here, or click to select file</p>\n                </div>\n              </div>\n              {submitted && !document.value.documentHash &&\n              <div className=\"text-danger invalid-feedback\">Document file is required</div>}\n            </div>\n          )}\n        </Dropzone>\n      </form>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const {document} = state;\n\n  return {\n    document\n  }\n}\n\nconst connected = connect(mapStateToProps)(AddDocument);\nexport {connected as AddDocument};\n","// @flow\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport type {Document} from '../_types';\nimport {alertActions} from '../_actions';\nimport {documentTypesToMime} from '../_constants';\nimport {ipfsService} from '../_services';\nimport {uuidv4} from '../_helpers';\n\ntype Props = {\n  initData: Document | any,\n  dispatch: Function\n};\ntype State = {\n  document: Document,\n  objUrl: string\n};\n\nclass ViewDocument extends React.Component<Props, State> {\n  documentDescriptionTextArea: ?HTMLTextAreaElement;\n  documentID: string;\n\n  constructor(props) {\n    super(props);\n\n    const document = this.props.initData || {\n      key: {\n        documentID: uuidv4()\n      },\n      value: {\n        documentDescription: '',\n        documentHash: '',\n        documentType: 0,\n        timestamp: 0,\n        updated: 0\n      }\n    };\n\n    this.state = {\n      document: document,\n      objUrl: ''\n    };\n\n    (this: any).getDocumentUrl = this.getDocumentUrl.bind(this);\n  }\n\n  getDocumentUrl() {\n    const {document} = this.state;\n    if (document && document.value.documentHash) {\n\n      ipfsService.getDocument(document.value.documentHash).then(\n        file => {\n          let binary = new Blob([file], {type: documentTypesToMime[document.value.documentType]});\n          let fileUrl = URL.createObjectURL(binary);\n          this.setState({objUrl: fileUrl});\n        },\n        error => {\n          this.props.dispatch(alertActions.error(`Error: ${error.toString()}`));\n        }\n      );\n    }\n  }\n\n  render() {\n    const {document} = this.state;\n\n    if (!document) {\n      return null;\n    }\n\n    return (\n      <div>\n        <div>\n          <div className='form-group'>\n            <label htmlFor=\"documentDescription\">Description</label>\n\n            <div className='input-group'>\n            <textarea className={\"form-control\"}\n                      name=\"documentDescription\" value={document.value.documentDescription}\n                      readOnly/>\n            </div>\n          </div>\n          <div className='form-group'>\n            <label htmlFor=\"documentHash\">Document Hash</label>\n            <div className='input-group'>\n              <input type=\"text\" className={\"form-control\"}\n                     name=\"documentHash\" value={document.value.documentHash}\n                     readOnly\n              />\n            </div>\n          </div>\n          <div className='form-group'>\n            <label htmlFor=\"documentHash\">Document Type</label>\n            <div className='input-group'>\n              <input type=\"text\" className={\"form-control\"}\n                     name=\"documentHash\" value={documentTypesToMime[document.value.documentType]}\n                     readOnly\n              />\n            </div>\n          </div>\n          {(document.value.documentHash) && (\n            <div className='form-group'>\n              <div className='input-group justify-content-center '>\n                <button className=\"btn btn-sm btn-primary w-50 m-2\" title=\"Get document from IPFS\"\n                        onClick={() => this.getDocumentUrl()}>\n                  Get document from IPFS\n                </button>\n              </div>\n            </div>\n          )}\n          {(this.state.objUrl) && (\n            <div className='form-group'>\n              <div className=\"input-group justify-content-center\">\n                <a className=\"btn btn-sm btn-primary w-50 m-2\" title=\"Download document\"\n                   href={this.state.objUrl} target=\"_blank\">\n                  Download document\n                </a>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const {documents} = state;\n\n  return {\n    documents\n  }\n}\n\nconst connected = connect(mapStateToProps)(ViewDocument);\nexport {connected as ViewDocument};\n","// @flow\nimport React from 'react';\nimport ReactTable from 'react-table';\nimport {connect} from 'react-redux';\n\nimport type {Document} from '../_types';\nimport {documentsActions} from '../_actions';\nimport {documentTypesToMime} from '../_constants';\nimport {formatter} from '../_helpers';\nimport {modalIds} from '../_constants';\nimport {Modal} from '../_components';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faEye} from '@fortawesome/free-solid-svg-icons';\n\ntype Props = {\n  dispatch: Function,\n  documents: { items: Document[] },\n  user: any,\n  refreshData: Function\n};\ntype State = {};\n\nclass DocumentsTable extends React.Component<Props, State> {\n\n  constructor(props) {\n    super(props);\n\n    (this: any).refreshData = this.refreshData.bind(this);\n  }\n\n  componentDidMount() {\n    this.refreshData();\n  }\n\n  refreshData() {\n    this.props.dispatch(documentsActions.getAll());\n  }\n\n  render() {\n    const {documents} = this.props;\n\n    if (!documents || !documents.items) {\n      return null;\n    }\n\n    const DEFAULT_COLUMNS = [{\n      Header: 'Document ID',\n      id: 'key.DocumentID',\n      accessor: 'key.documentID',\n    }, {\n      Header: 'Document Hash',\n      id: 'value.documentHash',\n      accessor: (rec: Document) => rec.value.documentHash\n    }, {\n      Header: 'Document Description',\n      id: 'value.documentDescription',\n      accessor: (rec: Document) => rec.value.documentDescription\n    }, {\n      Header: 'Document Type',\n      id: 'value.documentType',\n      accessor: (rec: Document) => documentTypesToMime[rec.value.documentType]\n    }, {\n      Header: 'Timestamp',\n      id: 'value.timestamp',\n      accessor: (rec: Document) => formatter.datetime(new Date(rec.value.timestamp * 1000))\n    }, {\n      Header: 'Updated',\n      id: 'value.updated',\n      accessor: (rec: Document) => formatter.datetime(new Date(rec.value.updated * 1000))\n    }, {\n      Header: 'Actions',\n      id: 'actions',\n      accessor: 'key.documentID',\n      filterable: false,\n      Cell: row => {\n        const record: Document = row.original;\n        return (\n          <div className=\"row justify-content-center\">\n            <button className=\"btn btn-sm btn-primary m-1\" title=\"View details\"\n                    onClick={() => Modal.open(this.props.dispatch, modalIds.viewDocument, record)}>\n              <FontAwesomeIcon fixedWidth icon={faEye}/>\n            </button>\n          </div>\n        )\n      }\n    }];\n\n    return (\n      <ReactTable\n        columns={DEFAULT_COLUMNS}\n        data={documents.items || []}\n        className=\"-striped -highlight w-100\"\n        defaultPageSize={10}\n        filterable={true}\n        defaultFilterMethod={(filter, row) => String(row[filter.id]).indexOf(filter.value) + 1}\n        defaultSorted={[\n          {\n            id: \"value.timestamp\",\n            desc: true\n          }\n        ]}\n      />\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const {documents, authentication} = state;\n  const {user} = authentication;\n  return {\n    documents,\n    user\n  };\n}\n\nconst connected = connect(mapStateToProps)(DocumentsTable);\nexport {connected as DocumentsTable};\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {Notification} from '../_components';\n\nclass Main extends React.Component {\n  render() {\n    const {route} = this.props;\n    const Component = this.props.component;\n    return (\n      <div className=\"row-custom content-section h-75 overflow-auto\">\n        <Notification/>\n        <Component route={route}/>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const {alert} = state;\n  return {\n    alert\n  };\n}\n\nconst connected = connect(mapStateToProps)(Main);\nexport {connected as Main};\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {AddDocument, DocumentsTable, ViewDocument, Modal} from '../_components';\nimport {documentsActions, modalActions} from '../_actions';\nimport {modalIds} from '../_constants';\n\nclass HomePage extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n  }\n\n  componentDidUpdate(prevProps) {\n    const {documents, dispatch} = this.props;\n\n    if (documents.adding === false) {\n      this.refreshData();\n      dispatch(modalActions.hide(modalIds.addDocument));\n    }\n  }\n\n  refreshData(shadowMode) {\n    this.props.dispatch(documentsActions.getAll(shadowMode));\n  }\n\n  render() {\n    return (\n      <div className={`container mt-3`}>\n        <div className=\"row justify-content-between\">\n          <button className=\"btn btn-primary mb-2\"\n                  onClick={() => Modal.open(this.props.dispatch, modalIds.addDocument)}>\n            Add Document\n          </button>\n          <button className=\"btn btn-primary mb-2\"\n                  onClick={() => this.refreshData()}>\n            Refresh\n          </button>\n        </div>\n        <Modal modalId={modalIds.addDocument} title=\"Add Document\">\n          <AddDocument/>\n        </Modal>\n        <Modal modalId={modalIds.viewDocument} title=\"View Document\" footer={false}>\n          <ViewDocument/>\n        </Modal>\n        <div className=\"row w-100\">\n          <DocumentsTable/>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const {authentication, modals, documents} = state;\n  const {user} = authentication;\n  return {\n    user,\n    documents,\n    modals\n  };\n}\n\nconst connected = connect(mapStateToProps)(HomePage);\nexport {connected as HomePage};\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {userActions} from '../_actions/index';\nimport {configService} from '../_services/index';\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // reset login status\n    this.props.dispatch(userActions.logout());\n\n    this.state = {\n      username: '',\n      orgName: '',\n      submitted: false\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    const {name, value} = e.target;\n    this.setState({[name]: value, submitted: false});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    this.setState({submitted: true, orgName: configService.get().org}, () => {\n      const {username, orgName} = this.state;\n      const {dispatch} = this.props;\n      if (username) {\n        dispatch(userActions.login(username, orgName));\n      }\n    });\n  }\n\n  render() {\n    const {username, submitted} = this.state;\n    return (\n      <div className=\"col-md-6 offset-md-3\">\n        <h2>Login</h2>\n        <form name=\"form\" onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Username</label>\n            <input type=\"text\" className={'form-control ' + (submitted && !username && 'is-invalid')} name=\"username\" value={username} onChange={this.handleChange}/>\n            {submitted && !username &&\n            <div className=\"text-danger\">Username is required</div>\n            }\n          </div>\n          <div className=\"form-group\">\n            <button className=\"btn btn-primary\">Login</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps() {\n}\n\nconst connected = connect(mapStateToProps)(LoginPage);\nexport {connected as LoginPage};\n","import {HomePage, LoginPage} from '../_pages';\n\nexport const publicRoutes = [{\n  component: HomePage,\n  path: '/'\n}, {\n  component: LoginPage,\n  path: '/login'\n}];\n\nexport const privateRoutes = [];\n","import React from 'react';\nimport {Route, Switch, HashRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {ScaleLoader} from 'react-spinners';\n\nimport {history} from '../_helpers';\nimport {alertActions, configActions} from '../_actions';\nimport {Footer, Header, Main} from '../Layout';\nimport {publicRoutes, privateRoutes} from './routes';\nimport {configService} from '../_services';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const {dispatch} = this.props;\n    history.listen((location, action) => {\n      // clear alert on location change\n      dispatch(alertActions.clear());\n    });\n    dispatch(configActions.get());\n  }\n\n  render() {\n    const {config, loading} = this.props;\n    const {org} = configService.get();\n\n    if (!config) {\n      return null;\n    }\n\n    return (\n      <HashRouter>\n        <Switch>\n          {publicRoutes.concat(privateRoutes).map((route, key) => {\n            const {component, path} = route;\n            return (\n              <Route\n                exact\n                path={path}\n                key={key}\n                render={(route) =>\n                  <div className={'main-section'}>\n                    <Header route={route}/>\n                    <div\n                      className={'overlay d-flex justify-content-center align-items-center ' + (!!loading ? 'visible' : 'invisible')}>\n                      <ScaleLoader loading={!!loading}/>\n                    </div>\n                    <Main component={component} route={route} config={config}/>\n                    <Footer/>\n                  </div>}\n              />\n            )\n          })}\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const {config, loading} = state;\n  return {\n    config,\n    loading\n  };\n}\n\nconst connectedApp = connect(mapStateToProps)(App);\nexport {connectedApp as App};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './static/bootstrap.min.css';\nimport '../node_modules/rc-switch/assets/index.css';\nimport '../node_modules/react-table/react-table.css';\nimport {App} from './App';\nimport {Provider} from 'react-redux';\n\nimport {store} from './_helpers';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('app'));\n"],"sourceRoot":""}